/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Sires;

import com.mysql.jdbc.Connection;
import java.awt.Component;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author lemb
 */
public class historialES extends javax.swing.JInternalFrame {
    DefaultTableModel modelo;
    
    /**
     * Creates new form historialES
     */
    public historialES() {
        initComponents();
        cargar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        historialES = new JTable(){

            public boolean isCellEditable(int rowIndex, int colIndex) {

                return false; //Las celdas no son editables.

            }
        };
        datos = new javax.swing.JPanel();
        nombre = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        apellidos = new javax.swing.JLabel();
        rol = new javax.swing.JLabel();
        telefono = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        historialOBJS = new javax.swing.JTable();
        fondo = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);

        jScrollPane1.setOpaque(false);

        historialES.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        historialES.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historialESMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(historialES);

        datos.setOpaque(false);

        nombre.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        nombre.setText("Nombre");

        id.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        id.setText("Identificaci√≥n");

        apellidos.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        apellidos.setText("Apellidos");

        rol.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        rol.setText("Rol");

        telefono.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        telefono.setText("Telefono");

        javax.swing.GroupLayout datosLayout = new javax.swing.GroupLayout(datos);
        datos.setLayout(datosLayout);
        datosLayout.setHorizontalGroup(
            datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosLayout.createSequentialGroup()
                .addGroup(datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rol)
                    .addComponent(apellidos)
                    .addComponent(id)
                    .addComponent(nombre)
                    .addComponent(telefono))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        datosLayout.setVerticalGroup(
            datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosLayout.createSequentialGroup()
                .addComponent(nombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(apellidos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(id)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rol)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(telefono)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setOpaque(false);

        historialOBJS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(historialOBJS);

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/subPlantillas.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(460, 460, 460)
                .addComponent(datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(fondo, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(datos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    void cargar(){
        String [] titulos={"Entrada", "Salida", "Usuario", "Vehiculo", "Operador E", "Operador S"};
        String [] registros=new String[6];
        String sql="SELECT fecha_E, fecha_S, u.identificacion, placa, oE.identificacion, oS.identificacion"
                + " FROM entrada_salida INNER JOIN persona u USING(codigo) "
                + " INNER JOIN persona oE ON entrada_salida.operadorE=oE.codigo"
                + " INNER JOIN persona oS ON entrada_salida.operadorS=oS.codigo"
                + " INNER JOIN vehiculo USING(id_vehiculo)";
        modelo=new DefaultTableModel(null,titulos);
        Conect cone = new Conect();
        Connection con=cone.conexion();

        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                registros[0]=rs.getString("fecha_E");
                registros[1]=rs.getString("fecha_S");
                registros[2]=rs.getString("u.identificacion");
                registros[3]=rs.getString("placa");
                registros[4]=rs.getString("oE.identificacion");
                registros[5]=rs.getString("oS.identificacion");
                modelo.addRow(registros);
            }
            historialES.setModel(modelo);
            
            resizeColumnWidth(historialES);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
    public void resizeColumnWidth(JTable table) {
        final TableColumnModel columnModel = table.getColumnModel();
        for (int column = 0; column < table.getColumnCount(); column++) {
            int width = 50; // Min width
            for (int row = 0; row < table.getRowCount(); row++) {
                TableCellRenderer renderer = table.getCellRenderer(row, column);
                Component comp = table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width +1 , width);
            }
            columnModel.getColumn(column).setPreferredWidth(width);
        }
    }
    
    private void historialESMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historialESMouseClicked
       
            int row=historialES.getSelectedRow();
            String codigo=historialES.getValueAt(row,2).toString();
          
            String sql="SELECT codigo, identificacion, persona.nombre, apellido, "
                    + "tipo_id.descripcion, rol.nombre, telefono "
            + " FROM persona "
            + " INNER JOIN tipo_id ON tipo_id.cod_tipo_id=persona.tipoID "
            + " INNER JOIN rol ON rol.id_rol=persona.id_rol"
            + " WHERE identificacion = "+codigo;
            Conect cc = new Conect();
            Connection CC = cc.conexion();
            try {
                Statement sta= CC.createStatement();
                ResultSet res =sta.executeQuery(sql);
                if(res.next()){
                    String identidadOBJ=res.getString("codigo"); 
                    //asignarle el codigo de la persona y usarlo en los objetos de esta.
                    nombre.setText(res.getString("persona.nombre"));
                    apellidos.setText(res.getString("apellido").toString());
                    id.setText(res.getString("tipo_id.descripcion").toString()+" "+res.getString("identificacion").toString());
                    rol.setText(res.getString("rol.nombre").toString());
                    telefono.setText(res.getString("telefono").toString());

                    System.out.println("Exito");
                    
                    String [] titulos={"Descripcion","Serial", "Modelo", "Tipo"};
                    String [] registros=new String[4];
                    sql="SELECT * FROM objetos INNER JOIN tipo_obj"
                            + " ON objetos.tipo_obj=tipo_obj.codigo_obj"
                            + " WHERE codigo_persona="+identidadOBJ;
                    modelo=new DefaultTableModel(null,titulos);
                    Conect cone = new Conect();
                    Connection con=cone.conexion();

                    try {
                        Statement st=con.createStatement();
                        ResultSet rs=st.executeQuery(sql);
                        while(rs.next()){
                            registros[0]=rs.getString("descripcion");
                            registros[1]=rs.getString("serial");
                            registros[2]=rs.getString("modelo");
                            registros[3]=rs.getString("desc_obj");
                            modelo.addRow(registros);
                        }
                        historialOBJS.setModel(modelo);

                        resizeColumnWidth(historialOBJS);
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error "+ex);
            }
            
        
            

        
    }//GEN-LAST:event_historialESMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel apellidos;
    private javax.swing.JPanel datos;
    private javax.swing.JLabel fondo;
    private javax.swing.JTable historialES;
    private javax.swing.JTable historialOBJS;
    private javax.swing.JLabel id;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel nombre;
    private javax.swing.JLabel rol;
    private javax.swing.JLabel telefono;
    // End of variables declaration//GEN-END:variables
}
